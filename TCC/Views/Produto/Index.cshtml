@model IEnumerable<TCC.Models.Produto>
@inject TCC.Libs.Login.LoginUsuario _loginUsuario
@inject TCC.Repositories.Interfaces.IUsuarioRepository _usuarioRepository;

@{
    ViewData["Title"] = "Index";
    Usuario user = _loginUsuario.GetUsuario();
}

<div class="block-heading">
    <h2 class="text-info"><br>Seus Produtos</h2>
</div>

@if (_usuarioRepository.IsAdm(user))
{
    <a class="btn btn-primary" role="button" style="margin-right: 15px;margin-left: 15px;margin-bottom: 15px;" asp-action="Create">Cadastrar novo produto</a>
}
@if (Model.Count() > 0)
{
    <a class="btn btn-primary" role="button" style="margin-right: 15px;margin-left: 15px;margin-bottom: 15px;" asp-action="LinkProduct">Vincular novo produto</a>


    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Temperatura)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Limite_max)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Limite_min)
                    </th>
                    @if (_usuarioRepository.IsAdm(user))
                    {
                        <th>
                            Nome do dono
                        </th>
                        <th>
                            Token
                        </th>
                        <th>
                            Id do produto
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Temperatura)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Limite_max)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Limite_min)
                        </td>
                        @if (_usuarioRepository.IsAdm(user))
                        {
                            @if (item.Usuario != null)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.Usuario.Nome)
                                </td>
                            }
                            else
                            {
                                <td>
                                    Nulo
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Token)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProdutoId)
                            </td>
                        }
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ProdutoId">Editar</a> |
                            <a asp-action="Details" asp-route-id="@item.ProdutoId">Monitorar</a> |
                            <a asp-action="Delete" asp-route-id="@item.ProdutoId">Deletar</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p class="alert alert-warning text-dark"><strong> Você não possui produtos, <a class="text-black-50" asp-action="LinkProduct">vincule um novo produto a sua conta</a>!</strong></p>
}
