@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@{
    ViewData["Title"] = "Vincular produto";
}
@if (ViewData["MSG_E"] != null)
{
    <p class="alert alert-warning"> @Html.Raw(ViewData["MSG_E"]) </p>
}
@if (ViewData["MSG_S"] != null)
{
    <p class="alert alert-success"> @Html.Raw(ViewData["MSG_S"]) </p>
}
<div class="block-heading">
    <h2 class="text-info"><br>Vincular Produto</h2>
</div>
<form asp-action="LinkProduct">
    <input type="hidden" name="captcha" id="captchaInput" value="" />
    <div class="form-group">
        <label class="control-label">Digite a chave do produto</label>
        <input id="key" name="key" class="form-control" />
    </div><div class="form-group">
        <input type="submit" value="Vincular" class="btn btn-success" />
    </div><a asp-action="Index"><br>Voltar</a>
</form>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://www.google.com/recaptcha/api.js?render=@Configuration["googleReCaptcha:SiteKey"]"></script>
    <script>
    grecaptcha.ready(function() {
        grecaptcha.execute('@Configuration["googleReCaptcha:SiteKey"]', { action: 'contact' }).then(function (token) {
            $("#captchaInput").val(token);
        });
    });
    </script>
}
